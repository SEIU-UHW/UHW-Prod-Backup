<apex:page standardStylesheets="false" sidebar="false" showHeader="false" applyBodyTag="false" applyHtmlTag="false">

<html lang="en"> 
  <head>
    <meta charset="utf-8"></meta>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"></meta>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"></meta>
    <meta name="description" content=""></meta>
    <meta name="author" content=""></meta>
                          
    <title>Resolve Questionnaires</title>

<apex:stylesheet value="{!URLFOR($Resource.mo_assets, '/mo_assets/css/bootstrap.css')}"/>
<apex:includeScript value="{!URLFOR($Resource.mo_assets, '/mo_assets/js/jquery.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.mo_assets, '/mo_assets/js/bootstrap.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.mo_assets, '/mo_assets/js/dgutils.js')}"/>

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.2/themes/smoothness/jquery-ui.css"/>
<script src="//code.jquery.com/ui/1.11.2/jquery-ui.js"></script>


<script src="/soap/ajax/36.0/connection.js" type="text/javascript"></script>
<script src="/soap/ajax/36.0/apex.js" type="text/javascript"></script>
<script language="JavaScript">


function navigateBack() {
  if( (typeof sforce != 'undefined') && sforce && (!!sforce.one) ) {
    sforce.one.back(true);
  } else {
    window.history.back();
  }
  return true; 
}

function navigateTo(pUrl) {
  if( (typeof sforce != 'undefined') && sforce && (!!sforce.one) ) {
    sforce.one.navigateToURL(pUrl);
  } else {
    window.location=pUrl;
  }
  return true;
}

</script>

</head>
<body>
<div align="center">
<font size="+2"><div id="titleDiv">Reconcile Questionnaires</div></font>
<br>&nbsp;</br>
 
 <!--
 <button class="btn btn-lg btn-primary" type="submit" onclick="navigateBack()">Back</button>
 -->
 <button class="btn btn-lg btn-primary" type="submit" onclick="cannotRecon()">Cannot Recon</button> 
 <button class="btn btn-lg btn-primary" type="submit" onclick="submitSurvey()">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reconcile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>
<form id="resolveForm"> 
<br>&nbsp;</br>
<div id="infoDiv"></div>
<br>&nbsp;</br>
 
 <table cellpadding="7">
 <tr valign="bottom">
    <td bgcolor="#481C60" width="20%" align="center"><font color="white">Leader</font></td>
    <td bgcolor="#481C60" width="20%" align="center"><font color="white">Member</font></td>
    <td bgcolor="#481C60" width="20%" align="center"><font color="white">Barg Ldr 1</font></td>    
    <td bgcolor="#481C60" width="20%" align="center"><font color="white">Barg Ldr 2</font></td>    
    <td bgcolor="#481C60" width="20%" align="center"><font color="white">Dept Ldr</font></td>            
 </tr>
 <tr valign="top">
   <td><div id="leaderDiv"></div></td>
   <td> 
   <font size="-1"><a href="javascript:toggleAlt();"><div align="center" id="toggleDiv"></div></a></font>
   <div style="display: none;" id="altDiv">
      <table border="0" width="100%">  
      <tr valign="top">
      <td align="right">  
      First Name:
      </td>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
      <td width="50%" align="left">
      <input id="firstname"></input>
      </td>
      </tr>
  
      <tr valign="top">
      <td  align="right">  
      Middle Name:
      </td>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
      <td width="50%" align="left">
      <input id="middlename"></input>
      </td>
      </tr>
  
      <tr valign="top">
      <td  align="right">  
      Last Name:
      </td>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
      <td width="50%" align="left">
      <input id="lastname"></input>
      </td>
      </tr>

  
      <tr valign="top">
      <td  align="right">  
      Phone:
      </td>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
      <td width="50%" align="left">
      <input id="phone"></input>
      </td>
      </tr>

      <tr valign="top">
      <td  align="right">  
      Email:
      </td>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
      <td width="50%" align="left">
      <input id="email"></input>
      </td>
      </tr>
  
      <tr valign="top">
      <td  align="right">  
      Person Type:
      </td>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
      <td width="50%" align="left">
      <select id="ptype">
      <option></option>
      <option>Member</option>
      <option>Friend/Family of Member</option>
      <option>Non-Member in Facility</option>
      </select>
      </td>
      </tr>

  
     </table>
   </div>
   <div id="memberDiv"></div></td>
   <td><div id="barg1NomineeDiv"></div></td>
   <td><div id="barg2NomineeDiv"></div></td>      
   <td><div id="deptNomineeDiv"></div></td>      
 </tr>
 </table>

</form>
<br>&nbsp;</br>

<div id="debugDiv"></div>

<br>&nbsp;</br>
</div>
<script language="JavaScript">
$("#altDiv").hide();

var NOT_SPECIFIED = "NOT SPECIFED";

var TOGGLE1 = "If no Contact found, click<br/> here to create alt person record.";
var TOGGLE2 = "Click here to search for Contacts.";
var altmode = false;

function scoreMatchName(pName, pContact) {
  //alert("[scoreMatchName] start");
  if (pName == null || pContact == null) {
    return 0.0;
  }
  if (pContact.FirstName == null) {
    pContact.FirstName = "Unknown";
  }
  if (pContact.LastName == null) {
    pContact.LastName = "Unknown";
  }  
  
  var _mname1 = pName.toLowerCase().trim().replace(/\s/g,'').replace(/\./g,'');
  var _mname2a = (pContact.FirstName + " " + pContact.LastName).toLowerCase().trim().replace(/\s/g,'').replace(/\./g,'');  
  var _mname2b = (pContact.FirstName + pContact.MiddleName +  pContact.LastName).toLowerCase().trim().replace(/\s/g,'').replace(/\./g,'');  
  var _mname2c = (pContact.LastName + " " + pContact.FirstName).toLowerCase().trim().replace(/\s/g,'').replace(/\./g,'');    
  if (_mname1 == _mname2a || _mname1 == _mname2b || _mname1 == _mname2c) {
    return pName.toLowerCase().split(" ").length;
  }

  if (_mname1.indexOf("tanya") > 0 && _mname1.indexOf("smith") >= 0 && _mname2a.indexOf("tanya") > 0 && _mname2a.indexOf("smith") >= 0) {
    return 2.0;
  }

  
  //alert(pName + " vs. " + pContact.FirstName + " " + pContact.LastName);
  var tokens = pName.toLowerCase().split(" ");
  var firstName = pContact.FirstName.toLowerCase();
  var lastName = pContact.LastName.toLowerCase();        
  var hits = 0.0;
  for (var k = 0; k < tokens.length; k++) {
      var token = tokens[k];
      if (token == firstName) {
        hits = hits + 1.0;
      } else if (token.length > 4 && firstName.length > 4 && token.substring(0,4) == firstName.substring(0, 4)) {
        hits = hits + 0.5;          
      } else if (token.length > 4 && firstName.length > 4 && (firstName.indexOf(token.substring(0,4)) > 0 || token.indexOf(firstName.substring(0,4)) > 0)) {
        hits = hits + 0.25;          
      }
      if (token == lastName) {
        hits = hits + 1.0;
      } else if (token.length > 4 && lastName.length > 4 && token.substring(0,4) == lastName.substring(0, 4)) {
        hits = hits + 0.5;          
      } else if (token.length > 4 && lastName.length > 4 && (lastName.indexOf(token.substring(0,4)) > 0 || token.indexOf(lastName.substring(0,4)) > 0)) {
        hits = hits + 0.25;          
      }     
  }
  if (hits > 0.0) {
    if (pContact.In_Current_BU__c != null && pContact.In_Current_BU__c == "false") {
      hits = hits - 0.5;
    }
  }
  if (hits < 0.0) {
    hits = 0.0;
  }
  return hits;
}

function formatContact(pContact, pRadioName) {
  if (pContact == null) {
    return "";
  }
  //alert("[formatContact] start");
  var cwriter = "<input type=\"radio\" name=\"" + pRadioName + "\" value=\"" + pContact.Id + "\">&nbsp;&nbsp;&nbsp;&nbsp;";
  cwriter += "<b>" + pContact.LastName + ", " + pContact.FirstName;
  if (pContact.MiddleName != null) {
    cwriter += " " + pContact.MiddleName;
  }
  cwriter += "</b><br/><font size=\"-1\">\n";
  cwriter += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + pContact.Account.Name + "<br/>\n";
  cwriter += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + pContact.Department + "<br/>\n";
  cwriter += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + pContact.Title + "</font></input><br/>\n";    
  return cwriter;
}



var rcid = "{!$CurrentPage.parameters.rcid}";
//
//  REMOVE BEFORE PRODUCTION
//
//rcid = "a240H00000Gevqk";
//
//  
//
if (rcid == null || rcid == "null" || rcid == "") {
  //rcid = "a1Hi0000002toFG";
  query = " SELECT Id from Questionnaire__c where CreatedDate >= 2017-10-23T00:00:00.545-07:00  AND Questionnaire_Status__c = \'Not Evaluated\' AND Leader_Employer__c != null ";
  sforce.connection.sessionId = "{!$Api.Session_ID}";    
  var result = sforce.connection.query(query);
  var records = result.getArray("records");
  if (records.length == 0) {
    alert("No unresolved Stretch Questionnaires are available.");
  }
  rcid = records[0].Id;
}
var lastRecord = null;

sforce.connection.sessionId = "{!$Api.Session_ID}";  

//
//  find Lost Timer Ids
//
var lostTimerContactSet = [];
var inactiveSet = [];
var query = "select Id, Name, Staff_Contact_Id__c, IsActive  from User where Staff_Contact_Id__c  != null";
var result = sforce.connection.query(query);
var records = result.getArray("records");
for (var i = 0; i < records.length; i++) {
  if (("" + records[i].IsActive).toLowerCase() == "true") {
    lostTimerContactSet.push(records[i].Staff_Contact_Id__c.substring(0, 15));
  } else {
    inactiveSet.push(records[i].Staff_Contact_Id__c.substring(0, 15));  
  }
}
var query = "select Id from Contact where Account.Name = \'SEIU-UHW\' ";
var result = sforce.connection.query(query);
var records = result.getArray("records");
for (var i = 0; i < records.length; i++) {
  var removeDex = lostTimerContactSet.indexOf(records[i].Id.substring(0, 15));
  if(removeDex >= 0) {
    lostTimerContactSet.splice(removeDex, 1);
  } 
}



var cachedTurf = new Array();
var cachedContacts = {};
//alert(rcid);

var qRecord = null;

var nomBargSqId = null;
var nomDeptSqId = null;
var contactSqId = null;
var responseValueField = null;
    
var employerName2 = null;
var organizerId = null;
var coordinatorId = null;

function loadReconRecord(pRcid) {
  //alert("[loadReconRecord] start...");
  try{   
    // query Salesforce using SOQL
    sforce.connection.sessionId = "{!$Api.Session_ID}";  
    var user = sforce.connection.getUserInfo();
    var query = "select Name, Answer_1__c, Answer_2__c, Answer_3__c, Answer_4__c, Answer_5__c, Questionnaire_Status__c, Survey_Name__c, Id, Leader_Name__c, Survey_Taker_Name__c, Dept_Ldr_Nominee_Name_1__c, Barg_Ldr_Nominee_Name_1__c, Barg_Ldr_Nominee_Name_2__c, Leader_Employer__r.Name, Leader_Employer__r.Coordinator__c, Leader_Employer__r.Coordinator__r.Name, Leader_Employer__r.Organizer_1__c, Leader_Employer__r.Organizer_1__r.Name, Completion_Time__c, Source_Text__c, Dept_Ldr_Nominee_1__c, Barg_Ldr_Nominee_1__c, Barg_Ldr_Nominee_2__c, CreatedDate  from Questionnaire__c  where CreatedDate >= 2017-10-23T00:00:00.545-07:00 AND Id=\'" + pRcid + "\' ";    
    //alert(query);
    var result = sforce.connection.query(query);
    var records = result.getArray("records");
    
    if (records.length == 0) {
      alert("End of queue, no unreconciled questionnaires are outstanding.");
    }
    
    qRecord = records[0];
    lastRecord = qRecord;
    var completionDate = qRecord.CreatedDate.substring(0, 10);
    if (qRecord.Completion_Time__c != null) {
      completionDate = qRecord.Completion_Time__c.substring(0, 10);
    }
        
    //
    // load SQ for Recon
    //  
    var nomBargSqIdMap = {};
    var nomDeptSqIdMap = {};
    var contactSqIdMap = {};

    var query = "SELECT Id, Survey_Code__c, Populated_by_Questionnaire__c, Populated_by_Questionnaire_Name__c,  Populated_by_Question_Response_Field__c from Survey_Question__c where (Effective_Date__c = null OR Effective_Date__c <= NEXT_WEEK) and (End_Date__c = null OR End_Date__c >= TODAY) and Populated_by_Questionnaire__c != null AND Populated_by_Questionnaire__c != \'NO\'  AND (UHW_Campaign__r.Start_Date__c = null OR UHW_Campaign__r.Start_Date__c <= " + completionDate + ") AND (UHW_Campaign__r.End_Date__c = null OR UHW_Campaign__r.End_Date__c >= " + completionDate + ") ";
    
    var debugWriter = query + "<br/>";
    
    var result = sforce.connection.query(query);
    var records2 = result.getArray("records");
    if (records2.length == 0) {
      alert("Can't find Survey Question for Nominations or Survey Response. Please contact Data Group to see if any campaigns are active.");
    }
    
    for (var i = 0; i < records2.length; i++) {
    
      var sqType  = records2[i].Populated_by_Questionnaire__c.toLowerCase().trim();
      var sqid = records2[i].Id;

      debugWriter += sqType + " = " + JSON.stringify(records2[i]) + "<br/>";
  
      var qprefix = records2[i].Populated_by_Questionnaire_Name__c;
      if (qprefix != null) {
        qprefix = records2[i].Populated_by_Questionnaire_Name__c.toLowerCase();
      } else {
        qprefix = NOT_SPECIFIED;
      }
        
      if (sqType == "contact") {
        contactSqId = sqid;  
        responseValueField = records2[i].Populated_by_Question_Response_Field__c;
        if (contactSqIdMap[qprefix] != null) {
          alert(qprefix + " - Only one main Contact SQ can be active per Questionnaire Name Prefix at any one time.  Please contact Data Group to limit active SQs. ");    
        } else {
          contactSqIdMap[qprefix] = sqid;
        }    
      } else if (sqType == "department ldr") {
        nomDeptSqId = sqid;  
        if (nomDeptSqIdMap[qprefix] != null) {
          alert(qprefix + " - Only one main Dept SQ can be active per Questionnaire Name Prefix at any one time.  Please contact Data Group to limit active SQs. ");    
        } else {
          nomDeptSqIdMap[qprefix] = sqid;
        }    
      } else if (sqType == "bargaining ldr") {
        nomBargSqId = sqid;
        if (nomBargSqIdMap[qprefix] != null) {
          alert(qprefix + " - Only one main Barg SQ can be active per Questionnaire Name Prefix at any one time.  Please contact Data Group to limit active SQs. ");    
        } else {
          nomBargSqIdMap[qprefix] = sqid;
        }
      }
    }

    //$("#debugDiv").html(debugWriter );
    
    contactSqId = null;
    var qsname = qRecord.Survey_Name__c;
    if (qsname == null) {
      qsname == NOT_SPECIFIED;
    } else {
      qsname = qsname.trim().toLowerCase();
    }
    //alert(qRecord.Survey_Name__c + " = " + qsname);
    for (var qprefix in contactSqIdMap) {
      if (qsname.indexOf(qprefix) == 0) {
        contactSqId = contactSqIdMap[qprefix];
        nomDeptSqId = nomDeptSqIdMap[qprefix];
        nomBargSqId = nomBargSqIdMap[qprefix];
        //alert("found contact sqid = " + contactSqId );
      }
    }
    //alert(JSON.stringify(contactSqIdMap));
    if (contactSqId == null) {
        contactSqId = contactSqIdMap[NOT_SPECIFIED];
        nomDeptSqId = nomDeptSqIdMap[NOT_SPECIFIED];
        nomBargSqId = nomBargSqIdMap[NOT_SPECIFIED];
    }
    if (contactSqId == null) {
      alert("Cannot determine Survey Question for Questionnaire with Survey Name " + qRecord.Survey_Name__c + ".  Please contact Data Group for assistance.");
    }

    
    var accountId = qRecord.Leader_Employer__c;
    var leaderName = qRecord.Leader_Name__c;
    var memberName = qRecord.Survey_Taker_Name__c;
    var deptNomineeName = qRecord.Dept_Ldr_Nominee_Name_1__c;
    var barg1NomineeName = qRecord.Barg_Ldr_Nominee_Name_1__c;
    var barg2NomineeName = qRecord.Barg_Ldr_Nominee_Name_2__c;
            
    organizerId = qRecord.Leader_Employer__r.Organizer_1__c;
    coordinatorId = qRecord.Leader_Employer__r.Coordinator__c;
    var employerName = qRecord.Leader_Employer__r.Name;
    employerName2 = employerName.toLowerCase();
    
    var infoWriter = "Questionnaire Name/Id = " + qRecord.Name + "<br/>";
    if (qRecord.Leader_Employer__r.Coordinator__r == null) {
       qRecord.Leader_Employer__r.Coordinator__r = {};
       qRecord.Leader_Employer__r.Coordinator__r.Name = "Vacant Coord";
    }
    infoWriter += "Coordinator = " + qRecord.Leader_Employer__r.Coordinator__r.Name + "<br/>";
    infoWriter += "Organizer = ";
    if (qRecord.Leader_Employer__r.Organizer_1__c != null) {
      infoWriter += qRecord.Leader_Employer__r.Organizer_1__r.Name;
    } else {
      infoWriter += "Vacant";    
    }
    infoWriter += "<br/>\n";
    infoWriter += "Status = " + qRecord.Questionnaire_Status__c;
    infoWriter += "<br/>\n";
    infoWriter += "Questionnaire Survey Name = " + qRecord.Survey_Name__c;
    infoWriter += "<br/>\n";
    infoWriter += "Completed Date = " + qRecord.Completion_Time__c;    
    $("#infoDiv").html(infoWriter);

    //alert("[loadReconRecord] writing info...");
    
    var leaderMap = [];
    var leaderScoreMap = [];
    var memberMap = [];
    var memberScoreMap = [];
    var deptNomineeMap = [];
    var deptNomineeScoreMap = [];
    var barg1NomineeMap = [];
    var barg1NomineeScoreMap = [];
    var barg2NomineeMap = [];
    var barg2NomineeScoreMap = [];        
    
    var scoreSet = new Array();
    
 
    for (var i = 0; i < 10; i++) {
      var query = "SELECT Id, FID__c, Account.Id, FirstName, LastName, MiddleName, Account.Name, Department, Title, In_Current_BU__c, In_Current_BU_Override__c from Contact ";
      if (coordinatorId == null) {
        query += " where ((Account.Coordinator__c = null ";
      } else {
        query += " where ((Account.Coordinator__c = \'" + coordinatorId + "\' ";
      }
      if (employerName2.indexOf("centinela") == 0 && employerName2.indexOf("garden grove") == 0) {
        query += " AND (In_Current_BU__c = true or In_Current_BU_Override__c != null) ";
      }

      var organizerIdSafe = "null";
      if (organizerId != null) {
        organizerIdSafe = "\'" + organizerId + "\'";
      }

      if (employerName2.indexOf("kaiser-roseville") == 0) {
        query += "  AND (Account.Organizer_1__c = " + organizerIdSafe + " OR Account.Name like \'KAISER-ROSEVILLE%\' ) ";
      } else if (employerName2.indexOf("kaiser-orange") == 0) {
        query += "  AND (Account.Organizer_1__c = " + organizerIdSafe + " OR Account.Name like \'KAISER-ORANGE%\' ) ";
      } else if (employerName2.indexOf("kaiser-lamc") == 0) {
        query += "  AND (Account.Organizer_1__c = " + organizerIdSafe + " OR Account.Name like \'KAISER-LAMC%\' ) ";
      } else if (employerName2.indexOf("kaiser-santa clara") == 0) {
        query += " AND (Account.Organizer_1__c = " + organizerIdSafe + " OR Account.Name like \'KAISER-SANTA CLARA%\' ) ";        
      } else if (employerName2.indexOf("stanford") == 0 || employerName2.indexOf("lucile packard") == 0  || employerName2.indexOf("lucille packard") == 0) {
        query += " AND (Account.Organizer_1__c = " + organizerIdSafe + " OR Account.Name like \'STANFORD%\' OR Account.Name like \'%PACKARD%\' ) ";        
      } else {
        query += " AND Account.Organizer_1__c = " + organizerIdSafe + " ";      
      }
      
      
      query += ") OR Account.Name = \'SEIU-UHW\' ";
      if (lostTimerContactSet.length > 0) {
        for (var ltdex = 0; ltdex < lostTimerContactSet.length; ltdex++) {
          query += " OR Id = \'" + lostTimerContactSet[ltdex] + "\' " ;         
        }
      }
      query += " ) AND FID__c like \'%" + i + "\' ";
      if (0 == 0) {
        //$("#debugDiv").html($("#debugDiv").html() + "<br/>" + query);
      }
      var records = null;
      if (cachedTurf != null && cachedTurf[0] == coordinatorId && cachedTurf[1] == organizerId ) {
        records = cachedContacts["P" + i];
      } else {
        cachedTurf = null;
        var result = sforce.connection.query(query);
        var records = result.getArray("records");  
        cachedContacts["P" + i] = records;    
        if (i == 9) {
          cachedTurf = [coordinatorId, organizerId];
        }
      }
      //$("#debugDiv").html($("#debugDiv").html() + "<br/>Records Found = " + records.length);
      for (var j = 0; j < records.length; j++) {
        var mbrScore = scoreMatchName(memberName, records[j]);
        //alert("member scored.");
        var ldrScore = scoreMatchName(leaderName, records[j]);
        //$("#debugDiv").html($("#debugDiv").html() + "<br/>j = " + j + " - " + mbrScore + ", " + ldrScore); 
        //alert("leader scored.");
        var deptNomScore = scoreMatchName(deptNomineeName, records[j]);
        var barg1NomScore = scoreMatchName(barg1NomineeName, records[j]);
        var barg2NomScore = scoreMatchName(barg2NomineeName, records[j]);                
                
        if (mbrScore > 0.0 && records[j].Account.Name != 'SEIU-UHW') {
          //alert("adding to member map...");        
          var skey = "s" + (100000 - mbrScore);
          if (scoreSet.indexOf(skey) < 0) {
            scoreSet.push(skey);
          }
          memberMap[records[j].FID__c] = records[j];
          memberScoreMap[records[j].FID__c] = skey;
        }
        if (ldrScore > 0.0) {
          //alert("adding to leader map...");
          var skey = "s" + (100000 - ldrScore );
          if (scoreSet.indexOf(skey) < 0) {
            scoreSet.push(skey);
          }
          leaderMap[records[j].FID__c] = records[j];
          leaderScoreMap[records[j].FID__c] = skey;
        }    
        if (deptNomScore > 0.0  && records[j].Account.Name != 'SEIU-UHW') {
          //alert("possible nom match = " + records[j].FirstName + " "  + records[j].LastName );
          var skey = "s" + (100000 - deptNomScore );
          if (scoreSet.indexOf(skey) < 0) {
            scoreSet.push(skey);
          }
          deptNomineeMap[records[j].FID__c] = records[j];
          deptNomineeScoreMap[records[j].FID__c] = skey;
        }    
        if (barg1NomScore > 0.0  && records[j].Account.Name != 'SEIU-UHW') {
          //alert("possible nom match = " + records[j].FirstName + " "  + records[j].LastName );
          var skey = "s" + (100000 - barg1NomScore );
          if (scoreSet.indexOf(skey) < 0) {
            scoreSet.push(skey);
          }
          barg1NomineeMap[records[j].FID__c] = records[j];
          barg1NomineeScoreMap[records[j].FID__c] = skey;
        }            
        if (barg2NomScore > 0.0  && records[j].Account.Name != 'SEIU-UHW') {
          //alert("possible nom match = " + records[j].FirstName + " "  + records[j].LastName );
          var skey = "s" + (100000 - barg2NomScore );
          if (scoreSet.indexOf(skey) < 0) {
            scoreSet.push(skey);
          }
          barg2NomineeMap[records[j].FID__c] = records[j];
          barg2NomineeScoreMap[records[j].FID__c] = skey;
        }              
      }
    }
    scoreSet.sort();
    
    //alert("sorted scores." + scoreSet.length + "\nleaderMap = " + leaderMap.length + "\n memberMap = " + memberMap.length);
    
    var finalLeadersList = new Array();
    var finalMembersList = new Array();  
    var finalDeptNomineesList = new Array();  
    var finalBarg1NomineesList = new Array();  
    var finalBarg2NomineesList = new Array();          
      
    for (var i = 0; i < scoreSet.length; i++) {
      var skey1 = scoreSet[i];
      for (var fid in leaderMap) {
        var skey2 = leaderScoreMap[fid];
        if (skey2 == skey1) {
          //if (leaderMap[fid].LastName.toLowerCase() == "madrigal" && leaderMap[fid].Account.Name == "SEIU-UHW") {
            //alert("found madrigal SEIU-UHW = " + JSON.stringify(leaderMap[fid]));
          //}
          if (inactiveSet.indexOf(leaderMap[fid].Id.substring(0, 15)) < 0) {
            finalLeadersList.push(leaderMap[fid]);
          }
        }        
      }
      for (var fid in memberMap) {
        var skey2 = memberScoreMap[fid];
        if (skey2 == skey1) {
          finalMembersList.push(memberMap[fid]);
        }        
      }      
      for (var fid in deptNomineeMap) {
        var skey2 = deptNomineeScoreMap[fid];
        if (skey2 == skey1) {
          finalDeptNomineesList.push(deptNomineeMap[fid]);
        }        
      }       
      for (var fid in barg1NomineeMap) {
        var skey2 = barg1NomineeScoreMap[fid];
        if (skey2 == skey1) {
          finalBarg1NomineesList.push(barg1NomineeMap[fid]);
        }        
      }       
      for (var fid in barg2NomineeMap) {
        var skey2 = barg2NomineeScoreMap[fid];
        if (skey2 == skey1) {
          finalBarg2NomineesList.push(barg2NomineeMap[fid]);
        }        
      }                   
    }
    
    //alert("outputting results... " + finalLeadersList.length + ", " + finalMembersList.length );
    
    //
    // output Members and Leaders
    //
    if (employerName == null) {
      employerName = "Unknown";
    }
    var lwriter = "Matches for <u>" + leaderName + "</u>,<br/> " + toProperCase(employerName)  + ":<br/>&nbsp;<br/>";
    for (var i = 0; i < finalLeadersList.length; i++) {
      if (i >= 10) {
        break;
      }
      //alert(JSON.stringify(finalLeadersList[i]));
      lwriter += formatContact(finalLeadersList[i], "leaderOption");
    }
    if (finalLeadersList.length == 0) {
      lwriter += "<i>No Matching Leaders Found</i>";
    }    
    $("#leaderDiv").html(lwriter);
    var mwriter =  "Matches for <u>" + memberName + "</u><br/>&nbsp;<br/>";
    for (var i = 0; i < finalMembersList.length; i++) {
      if (i >= 10) {
        break;
      }
      mwriter += formatContact(finalMembersList[i], "memberOption");
    }
    if (finalMembersList.length == 0) {
      mwriter += "<i>No Matching Members Found</i>";
    }
    $("#memberDiv").html(mwriter);
        
    var ntokens = qRecord.Survey_Taker_Name__c.split(" ");
    if (ntokens.length >= 3) {
      $("#lastname").val(qRecord.Survey_Taker_Name__c.substring(ntokens[0].length + ntokens[1].length + 2).trim());
      $("#middlename").val(ntokens[1]); 
      $("#firstname").val(ntokens[0]);  
    } else if (ntokens.length == 2) {
      $("#lastname").val(ntokens[1]); 
      $("#firstname").val(ntokens[0]); 
    } else {
      $("#firstname").val(qRecord.Survey_Taker_Name__c);  
    }
    $("#phone").val(qRecord.Member_Cell_Phone__c);
    $("#email").val(qRecord.Member_Email__c);
    $("#toggleDiv").html(TOGGLE1);
    $("#altDiv").hide();
    altmode = false;
    $("#memberDiv").show(); 
    
    //
    // nominee stuff
    //
    var nwriter = "Matches for <u>" + deptNomineeName + "</u>,<br/> " + toProperCase(employerName)  + ":<br/>&nbsp;<br/>";
    nwriter += "<input name=\"deptNomineeOption\" value=\"NOT_FOUND\" checked=\"checked\" type=\"radio\">&nbsp;&nbsp;&nbsp;&nbsp;<b>Not Found</b><br><font size=\"-1\"><br>\n";
    for (var i = 0; i < finalDeptNomineesList.length; i++) {
      if (i >= 10) {
        break;
      }
      nwriter += formatContact(finalDeptNomineesList[i], "deptNomineeOption");
    }
    if (finalDeptNomineesList.length == 0) {
      nwriter += "<i>No Matching Nominees Found</i>";
    }    
    $("#deptNomineeDiv").html(nwriter);
    
    var nwriter = "Matches for <u>" + barg1NomineeName + "</u>,<br/> " + toProperCase(employerName)  + ":<br/>&nbsp;<br/>";
    nwriter += "<input name=\"barg1NomineeOption\" value=\"NOT_FOUND\" checked=\"checked\" type=\"radio\">&nbsp;&nbsp;&nbsp;&nbsp;<b>Not Found</b><br><font size=\"-1\"><br>\n";
    for (var i = 0; i < finalBarg1NomineesList.length; i++) {
      if (i >= 10) {
        break;
      }
      nwriter += formatContact(finalBarg1NomineesList[i], "barg1NomineeOption");
    }
    if (finalBarg1NomineesList.length == 0) {
      nwriter += "<i>No Matching Nominees Found</i>";
    }    
    $("#barg1NomineeDiv").html(nwriter);

    var nwriter = "Matches for <u>" + barg2NomineeName + "</u>,<br/> " + toProperCase(employerName)  + ":<br/>&nbsp;<br/>";
    nwriter += "<input name=\"barg2NomineeOption\" value=\"NOT_FOUND\" checked=\"checked\" type=\"radio\">&nbsp;&nbsp;&nbsp;&nbsp;<b>Not Found</b><br><font size=\"-1\"><br>\n";
    for (var i = 0; i < finalBarg2NomineesList.length; i++) {
      if (i >= 10) {
        break;
      }
      nwriter += formatContact(finalBarg2NomineesList[i], "barg2NomineeOption");
    }
    if (finalBarg2NomineesList.length == 0) {
      nwriter += "<i>No Matching Nominees Found</i>";
    }    
    $("#barg2NomineeDiv").html(nwriter);    

        
  } catch(e) { 
    alert('An Error has Occured. Error:' +e + "\n\n" + i + "\n\n" + JSON.stringify(lastRecord)); 
  } 
}

function submitSurvey(pAlt) {
 
  //alert("[submitSurvey] start...");

  var ldrId = $("input[name=leaderOption]:checked").val();
  if (ldrId == null) { 
    alert("Please choose a Leader");
    return false;
  }
  var mbrId = null;

  
  var deptNomId = $("input[name=deptNomineeOption]:checked").val();
  if (deptNomId == null) { 
    alert("Please choose a Department Nominee.");
    return false;
  }  
  var deptNomResponse = "M";
  var deptNomCount = 0.0; 

  var barg1NomId = $("input[name=barg1NomineeOption]:checked").val();
  if (barg1NomId == null) { 
    alert("Please choose Bargaining Nominee 1.");
    return false;
  }  
  
  var barg1NomResponse = "M";
  var barg1NomCount = 0.0; 
  
  var barg2NomId = $("input[name=barg2NomineeOption]:checked").val();
  if (barg2NomId == null) { 
    alert("Please choose  Bargaining Nominee 2.");
    return false;
  }  
    
  var barg2NomResponse = "M";
  var barg2NomCount = 0.0; 
  
  try{
    
    var altlast = null;
    var altmiddle = null;
    var altfirst = null;
    var altemid = null;
    var altptype = null;     
    var altphone = null;     
    var altemail = null;  

    //alert("toggle div = " + $("#toggleDiv").html() + "\nalt mode = " + altmode);
    if (altmode == false) {
      mbrId = $("input[name=memberOption]:checked").val();
      altlast = null;
      altmiddle = null;
      altfirst = null;
      altemid = null;
      altptype = null;     
      altphone = null;     
      altemail = null;  
    } else {
      //alert("alt person info!");
      mbrId = null;
      altlast = $("#lastname").val();
      altmiddle = $("#middlename").val();
      altfirst = $("#firstname").val();
      altemid = qRecord.Leader_Employer__c;
      altptype = $("#ptype").val();    
      if (altptype == null || altptype == "") {
        alert("Please enter an Alt Person Type.");
        return false;
      } 
      altphone = $("#phone").val();     
      altemail = $("#email").val();
    }
    

    sforce.connection.sessionId = "{!$Api.Session_ID}";  
    //
    // get nom counts
    //
    
    if (nomDeptSqId != null && nomBargSqId != null) {
      var query = "select Id, Survey_Question__c, Response_Value__c, Contact__c, Add_Info_Numeric__c from Survey_Response__c where ( Survey_Question__c = \'" + nomDeptSqId + "\' OR Survey_Question__c = \'" + nomBargSqId + "\' ) ";
      if (coordinatorId == null) {
        query += " AND (Contact__r.Account.Coordinator__c = null ";
      }  else {
        query += " AND (Contact__r.Account.Coordinator__c = \'" + coordinatorId + "\' ";
      }
      if (employerName2.indexOf("centinela") == 0 && employerName2.indexOf("garden grove") == 0) {
        query += " AND (In_Current_BU__c = true or In_Current_BU_Override__c != null) ";
      }

      var organizerIdSafe = "null";
      if (organizerId != null) {
        organizerIdSafe = "\'" + organizerId + "\'";
      }

      if (employerName2.indexOf("kaiser-roseville") == 0) {
        query += "  AND (Contact__r.Account.Organizer_1__c = " + organizerIdSafe + " OR Contact__r.Account.Name like \'KAISER-ROSEVILLE%\' ) ";
      } else if (employerName2.indexOf("kaiser-orange") == 0) {
        query += "  AND (Contact__r.Account.Organizer_1__c = " + organizerIdSafe + " OR Contact__r.Account.Name like \'KAISER-ORANGE%\' ) ";
      } else if (employerName2.indexOf("kaiser-lamc") == 0) {
        query += "  AND (Contact__r.Account.Organizer_1__c = " + organizerIdSafe + " OR Contact__r.Account.Name like \'KAISER-LAMC%\' ) ";
      } else if (employerName2.indexOf("kaiser-santa clara") == 0) {
        query += " AND (Contact__r.Account.Organizer_1__c = " + organizerIdSafe + " OR Contact__r.Account.Name like \'KAISER-SANTA CLARA%\' ) ";        
      } else if (employerName2.indexOf("stanford") == 0 || employerName2.indexOf("lucile packard") == 0  || employerName2.indexOf("lucille packard") == 0) {
        query += " AND (Contact__r.Account.Organizer_1__c = " + organizerIdSafe + " OR Contact__r.Account.Name like \'STANFORD%\' OR Contact__r.Account.Name like \'%PACKARD%\' ) ";        
      } else {
        query += " AND Contact__r.Account.Organizer_1__c = " + organizerIdSafe + " ";      
      }  
      query += ") ";  
      
      //alert("[submit survey] nom count query = " + query);
      
      var result = sforce.connection.query(query);
      var records = result.getArray("records");  
    
      //alert("processing results...");
    
      for (var ndex = 0; ndex < records.length; ndex++) {
        if (deptNomId == records[ndex].Contact__c && records[ndex].Survey_Question__c == nomDeptSqId) {
          deptNomCount = parseFloat(records[ndex].Add_Info_Numeric__c);
          if (records[ndex].Response_Value__c.substring(0, 1).toUpperCase() != "N") {
            deptNomResponse = records[ndex].Response_Value__c.substring(0, 1);
          }
        }
        if (barg1NomId == records[ndex].Contact__c && records[ndex].Survey_Question__c == nomBargSqId) {
          barg1NomCount = parseFloat(records[ndex].Add_Info_Numeric__c);
          if (records[ndex].Response_Value__c.substring(0, 1).toUpperCase() != "N") {
            barg1NomResponse = records[ndex].Response_Value__c.substring(0, 1);
          }
        }
        if (barg2NomId == records[ndex].Contact__c && records[ndex].Survey_Question__c == nomBargSqId) {
          barg2NomCount = parseFloat(records[ndex].Add_Info_Numeric__c);
          if (records[ndex].Response_Value__c.substring(0, 1).toUpperCase() != "N") {
            barg2NomResponse = records[ndex].Response_Value__c.substring(0, 1);        
          }
        }      
      }
    }        
    //
    //  create Survey Response record
    //        
    var responses = []; 
    var response = new sforce.SObject("Survey_Response__c"); 
    if (mbrId != null) {
      response.Contact__c = mbrId;
    } else {
      response.Alt_Last_Name__c = altlast;
      response.Alt_First_Name__c = altfirst;
      response.Alt_Middle_Name__c = altmiddle;                 
      response.Alt_Employer__c = altemid;
      response.Alt_Email__c = altemail;        
      response.Alt_Phone__c = altphone;                            
      response.Alt_Person_Type__c = altptype; 
    }
    response.Collected_By__c = ldrId;
    response.Survey_Question__c = contactSqId;
    response.Collected_Datetime__c = qRecord.Completion_Time__c;
    if (responseValueField == null || responseValueField.trim() == "" || responseValueField.trim().toLowerCase() == "null") {
      response.Response_Value__c = "yes";   
    } else {
      //alert("populating from " + responseValueField);
      response.Response_Value__c = qRecord[responseValueField];
    }
    response.Comments__c = JSON.stringify(qRecord);
    response.Add_Info__c = qRecord.COPE_Contribution__c + ";" + qRecord.Signed_Membership_Card__c;
    responses.push(response); 

    if (deptNomId != "NOT_FOUND" || barg1NomId != "NOT_FOUND" || barg2NomId != "NOT_FOUND") {
      deptNomCount = 0;
      barg1NomCount = 0;
      barg2NomCount = 0;            
      var query3 = "select Id, Answer_1__c, Answer_2__c, Answer_3__c, Answer_4__c, Answer_5__c, Dept_Ldr_Nominee_1__c, Barg_Ldr_Nominee_1__c, Barg_Ldr_Nominee_2__c from Questionnaire__c where Id != \'" + rcid + "\' AND ";
      query3 += " Survey_Response__r.Survey_Question__c = \'" + contactSqId + "\' AND (";      
      var qhit = 0;
      if (deptNomId != "NOT_FOUND") {
        query3 += " Dept_Ldr_Nominee_1__c = \'" + deptNomId + "\' ";
        qhit++;
      }
      if (barg1NomId != "NOT_FOUND") {
        if (qhit > 0) {
          query3 += " OR ";
        }
        query3 += " Barg_Ldr_Nominee_1__c  = \'" + barg1NomId + "\' OR Barg_Ldr_Nominee_2__c   = \'" + barg1NomId + "\'   "
        qhit++;
      }
      if (barg2NomId != "NOT_FOUND") {
        if (qhit > 0) {
          query3 += " OR ";
        }
        query3 += " Barg_Ldr_Nominee_2__c  = \'" + barg2NomId + "\'  OR Barg_Ldr_Nominee_1__c   = \'" + barg2NomId + "\' "
        qhit++;
      } 
      query3 += ")";      
      //alert(query3);
      var result3 = sforce.connection.query(query3);
      var records3 = result3.getArray("records");
      //alert("results = " + records3.length);
      for (var i3 = 0; i3 < records3.length; i3++) {
        //alert("records3 " + i3 + " = " + JSON.stringify(records3[i3]));
        //alert("dept " + i3 + " - _" + records3[i3].Dept_Ldr_Nominee_1__c + "_ vs. _" + deptNomId + "_" );
        if (records3[i3].Dept_Ldr_Nominee_1__c == deptNomId ) {
          //alert("increment dept nom count");
          deptNomCount++;
        }
        if (records3[i3].Barg_Ldr_Nominee_1__c == barg1NomId || records3[i3].Barg_Ldr_Nominee_2__c == barg1NomId) {
          //alert("increment barg1 nom count");
          barg1NomCount++;
        }        
        if (records3[i3].Barg_Ldr_Nominee_1__c == barg2NomId || records3[i3].Barg_Ldr_Nominee_2__c == barg2NomId) {
          if (records3[i3].Barg_Ldr_Nominee_1__c != records3[i3].Barg_Ldr_Nominee_2__c) {
            //alert("increment barg2 nom count");
            barg2NomCount++;
          }
        }                
      }
    }
       
    if (deptNomId != "NOT_FOUND") {
      var response2 = new sforce.SObject("Survey_Response__c");    
      response2.Contact__c = deptNomId;
      response2.Survey_Question__c = nomDeptSqId;
      response2.Response_Value__c = deptNomResponse;
      if (deptNomResponse.substring(0,1).toUpperCase() == "N") {
        response2.Response_Value__c = "M";
      }
      response2.Add_Info__c = (deptNomCount + 1.0);     
      responses.push(response2);            
    }
    if (barg1NomId != "NOT_FOUND") {
      var response2 = new sforce.SObject("Survey_Response__c");    
      response2.Contact__c = barg1NomId;
      response2.Survey_Question__c = nomBargSqId;
      response2.Response_Value__c = barg1NomResponse;
      if (barg1NomResponse.substring(0,1).toUpperCase() == "N") {
        response2.Response_Value__c = "M";
      }
      response2.Add_Info__c = (barg1NomCount + 1.0);
      responses.push(response2);            
    }    
    if (barg2NomId != "NOT_FOUND") {
      var response2 = new sforce.SObject("Survey_Response__c");    
      response2.Contact__c = barg2NomId;
      response2.Survey_Question__c = nomBargSqId;
      response2.Response_Value__c = barg2NomResponse;
      if (barg2NomResponse.substring(0,1).toUpperCase() == "N") {
        response2.Response_Value__c = "M";
      }
      response2.Add_Info__c = (barg2NomCount + 1.0);
      responses.push(response2);            
    }        

    //alert("creating - " + JSON.stringify(responses));


    
    var results = null;
    results = sforce.connection.create(responses); 
  
    if (results[0].getBoolean("success") == false) {
      alert("Failed to create Survey Response.  Please contact Data Group.  Debug info: " + JSON.stringify(results));
    }
    //alert("Debug SR Results = " + JSON.stringify(results));
  
    var srid = results[0].id;
 
    //alert("srid = " + srid);
 
    //
    //  tie Questionnaire record to Survey Response record
    //    
    var rrecords = []; 
    var rrecord = new sforce.SObject("Questionnaire__c"); 
    rrecord.Id = qRecord.Id;
    rrecord.Survey_Response__c = srid;
    rrecord.Unable_to_Resolve__c = false;
    if (deptNomId != null && deptNomId != "NOT_FOUND") {
      rrecord.Dept_Ldr_Nominee_1__c = deptNomId;
    }
    if (barg1NomId != null && barg1NomId != "NOT_FOUND") {
      rrecord.Barg_Ldr_Nominee_1__c = barg1NomId;
    }
    if (barg2NomId != null && barg2NomId != "NOT_FOUND") {
      rrecord.Barg_Ldr_Nominee_2__c = barg2NomId;
    }        
    
    
    rrecords.push(rrecord); 
    var results = null;
    results = sforce.connection.update(rrecords); 
        
    
    //alert("Questionnaire update results = " + JSON.stringify(results));
 
    //alert(JSON.stringify(results));

    loadNext();
    
  } catch(e) { 
    alert('Reconcile.  An Error has Occured. Error:' +e + "\n\n" + i + "\n\n" + JSON.stringify(lastRecord)); 
  }     
}

function loadNext() {
  //alert("[loadNext] start...");
  try{  
    // query Salesforce using SOQL
    sforce.connection.sessionId = "{!$Api.Session_ID}";  

    var query = "SELECT Id from Questionnaire__c where CreatedDate >= 2017-10-23T00:00:00.545-07:00 AND Id != \'" + rcid + "\' AND Questionnaire_Status__c = \'Not Evaluated\' and Survey_Name__c like \'P5%\'  and Leader_Employer__c != null ";
    if (cachedTurf != null) {
      var coordinatorId = cachedTurf[0];
      var organizerId = cachedTurf[1];      
      if (coordinatorId == null) {
        query += " AND Leader_Employer__r.Coordinator__c = null AND ";
      } else {
        query += " AND Leader_Employer__r.Coordinator__c = \'" + coordinatorId + "\' AND ";
      }
      var organizerIdSafe = "null";
      if (organizerId != null) {
        organizerIdSafe = "\'" + organizerId + "\'";
      }
      query += " Leader_Employer__r.Organizer_1__c = " + organizerIdSafe + " ";
    }
    query += " AND Leader_Employer__c != null ";
    query += " ORDER BY Survey_Taker_Name__c  ";
    //alert(query);
    var result = sforce.connection.query(query);
    var records = result.getArray("records");  
    var nextRcid = null;
    if (records.length == 0) {
      query = "SELECT Id from Questionnaire__c where CreatedDate >= 2017-10-23T00:00:00.545-07:00 AND Id != \'" + rcid + "\' AND Questionnaire_Status__c = \'Not Evaluated\'  and Leader_Employer__c != null ";
      result = sforce.connection.query(query);
      records = result.getArray("records"); 
      if (records.length == 0) {
        alert("All Reach Questionnaires have been evaluated.");
        navigateTo("/");
      }
      cachedTurf = null;
      nextRcid = records[0].Id;
    } else {
      nextRcid = records[0].Id;
    }
    rcid = nextRcid;
    //alert("[loadNext] next id = " + nextRcid);    
    loadReconRecord(nextRcid );
  } catch(e) { 
    alert('LoadNext.  An Error has Occured. Error:' +e + "\n\n" + i + "\n\n" + JSON.stringify(lastRecord)); 
  }  
}

function cannotRecon() {
  var comments = prompt("Why are we unable to reconcile?");
  if (comments == null) {
    return false;
  }
  try{  
  
    // query Salesforce using SOQL
    sforce.connection.sessionId = "{!$Api.Session_ID}"; 
    var rrecords = []; 
    var rrecord = new sforce.SObject("Questionnaire__c"); 
    rrecord.Id = qRecord.Id;
    rrecord.Unable_to_Resolve__c = true;
    rrecord.Resolve_Comments__c = comments;
    rrecords.push(rrecord); 
    var results = null;
    results = sforce.connection.update(rrecords);     
    
    loadNext();
     
  } catch(e) { 
    alert('Cannot Reconcile.  An Error has Occured. Error:' +e + "\n\n" + i + "\n\n" + JSON.stringify(lastRecord)); 
  }  
}

loadReconRecord(rcid);

//
// alt person functionality
//

function toggleAlt() {
  if (altmode == false) {
    $("#toggleDiv").html(TOGGLE2);
    $("#altDiv").show();
    $("#memberDiv").hide();
    altmode = true;    
  } else {
    $("#toggleDiv").html(TOGGLE1);
    $("#altDiv").hide();
    $("#memberDiv").show(); 
    altmode = false; 
  }
}



</script>
</body>
</html>
</apex:page>